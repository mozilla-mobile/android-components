/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion rootProject.ext.build['compileSdkVersion']

    defaultConfig {
        minSdkVersion rootProject.ext.build['minSdkVersion']
        targetSdkVersion rootProject.ext.build['targetSdkVersion']
    }

    lintOptions {
        warningsAsErrors true
        abortOnError true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    ivy {
        url 'https://index.taskcluster.net/v1/task/'
        layout 'pattern', {
            artifact '/project.fxaclient.builds.[revision]/artifacts/public/bin/[organisation]/[module]_[revision].[ext]'
        }
    }

    ivy {
        url 'https://github.com/'
        layout 'pattern', {
            artifact '/java-native-access/[organisation]/raw/[revision]/dist/[module].[ext]'
        }
    }
}

configurations{
    fxa
    jna
}

dependencies {
    fxa "mozilla:fxa_client_android:${rootProject.ext.dependencies['fxa']}@zip"
    fxa "mozilla:fxa_client_android_deps:${rootProject.ext.dependencies['fxa']}@zip"
    jna "jna:android-armv7:${rootProject.ext.dependencies['jna']}@jar"
    jna "jna:android-aarch64:${rootProject.ext.dependencies['jna']}@jar"
    jna "jna:android-x86:${rootProject.ext.dependencies['jna']}@jar"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:${rootProject.ext.dependencies['kotlin']}"
    implementation "net.java.dev.jna:jna:${rootProject.ext.dependencies['jna']}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${rootProject.ext.dependencies['coroutines']}"

    testImplementation "junit:junit:${rootProject.ext.dependencies['junit']}"
    testImplementation "org.robolectric:robolectric:${rootProject.ext.dependencies['robolectric']}"
    testImplementation "org.mockito:mockito-core:${rootProject.ext.dependencies['mockito']}"
}

ext.jniOutputDir = "src/main/jniLibs"

ext.jnaUnzip = { task, source, target ->
    configure(task) {
        from zipTree(configurations.jna.find { it.name.startsWith(source) })
        include 'libjnidispatch.so'
        into "$jniOutputDir/$target"
    }
}
task unzipJnaArm(type: Copy) { t -> jnaUnzip(t, "android-armv7", "armeabi") }
task unzipJnaArm64(type: Copy) { t -> jnaUnzip(t, "android-aarch64", "arm64") }
task unzipJnaX86(type: Copy) { t -> jnaUnzip(t, "android-x86", "x86") }

task unzipFxaLibs(dependsOn: [unzipJnaArm, unzipJnaArm64, unzipJnaX86], type: Copy) {
    from configurations.fxa.files.collect { zipTree(it) }
    into jniOutputDir
}
preBuild.dependsOn(unzipFxaLibs)

archivesBaseName = "fxa"

apply from: '../../../publish.gradle'
ext.configurePublish(
        'org.mozilla.components',
        'fxa',
        'A library for integrating with Firefox Accounts.')
