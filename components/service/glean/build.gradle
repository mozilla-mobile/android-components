/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

plugins {
    id "com.jetbrains.python.envs" version "0.0.26"
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

/*
 * This defines the location of the JSON schema used to validate the pings
 * created during unit testing.
 * This uses a specific version of the schema identified by a git commit hash.
 */
String GLEAN_PING_SCHEMA_GIT_HASH = "7755497"
String GLEAN_PING_SCHEMA_URL = "https://raw.githubusercontent.com/mozilla-services/mozilla-pipeline-schemas/$GLEAN_PING_SCHEMA_GIT_HASH/schemas/glean/baseline/baseline.1.schema.json"

android {
    compileSdkVersion config.compileSdkVersion

    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion

        buildConfigField("String", "LIBRARY_VERSION", "\"" + config.componentsVersion + "\"")
        buildConfigField("String", "GLEAN_PING_SCHEMA_URL", "\"" + GLEAN_PING_SCHEMA_URL + "\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation Dependencies.kotlin_stdlib
    implementation Dependencies.kotlin_coroutines
    implementation Dependencies.androidx_lifecycle_extensions
    implementation Dependencies.androidx_work_runtime

    implementation project(':support-ktx')
    implementation project(':support-base')
    implementation project(':concept-fetch')
    implementation project(':lib-fetch-httpurlconnection')

    // We need a compileOnly dependency on the following block of testing
    // libraries in order to expose the GleanTestRule to applications/libraries
    // using the Glean SDK.
    // We can't simply create a separate package otherwise we would need
    // to provide a public API for the testing package to access the
    // Glean internals, which is something we would not want to do.
    compileOnly Dependencies.testing_junit
    compileOnly Dependencies.androidx_work_testing

    testImplementation Dependencies.androidx_test_core

    testImplementation Dependencies.testing_junit
    testImplementation Dependencies.testing_robolectric
    testImplementation Dependencies.testing_mockito
    testImplementation Dependencies.testing_mockwebserver
    testImplementation Dependencies.androidx_work_testing

    testImplementation project(':support-test')
    testImplementation project(':lib-fetch-okhttp')
}

apply from: '../../../publish.gradle'
ext.configurePublish(config.componentsGroupId, archivesBaseName, project.ext.description)

apply from: './scripts/sdk_generator.gradle'
