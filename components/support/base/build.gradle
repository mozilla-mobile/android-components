/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

def generatedSrcDir = new File(buildDir, "generated/components/src/main/java")

android {
    compileSdkVersion config.compileSdkVersion

    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            java {
                srcDirs += generatedSrcDir
            }
        }
    }
}

dependencies {
    implementation Dependencies.kotlin_stdlib

    // We expose the app-compat as API so that consumers get access to the Lifecycle classes automatically
    api Dependencies.support_appcompat

    testImplementation project(':support-test')

    testImplementation Dependencies.androidx_test_core
    testImplementation Dependencies.testing_junit
    testImplementation Dependencies.testing_robolectric
    testImplementation Dependencies.testing_mockito
}


preBuild.finalizedBy("generateComponentEnum")


/**
 * Generates a "Components" enum listing all published components.
 */
task generateComponentEnum {
    doLast {
        generatedSrcDir.mkdirs()

        def file = new File(generatedSrcDir, "Component.kt")
        file.delete()
        file.createNewFile()

        file << "package mozilla.components.support.base" << "\n"
        file << "\n"
        file << "// Automatically generated file. DO NOT MODIFY" << "\n"
        file << "\n"
        file << "enum class Component {" << "\n"

        file << buildConfig.projects.findAll { project ->
            project.value.publish
        }.collect { project ->
            "    " + project.key.replace("-", "_").toUpperCase(Locale.US)
        }.join(", \n")

        file << "\n"
        file << "}\n"
        file << "\n"
    }
}

apply from: '../../../publish.gradle'
ext.configurePublish(config.componentsGroupId, archivesBaseName, project.ext.description)
