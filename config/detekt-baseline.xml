<?xml version="1.0" ?>
<SmellBaseline>
  <Blacklist timestamp="1521663963552"></Blacklist>
  <Whitelist timestamp="1522961299960">
    <ID>ComplexCondition:InlineAutocompleteEditText.kt$InlineAutocompleteEditText$settingAutoComplete || start &lt; 0 || start == selStart &amp;&amp; start == selEnd</ID>
    <ID>ComplexCondition:InlineAutocompleteEditText.kt$InlineAutocompleteEditText.&lt;no name provided&gt;$composingStart &gt;= 0 &amp;&amp; composingEnd &gt;= 0 &amp;&amp; composingEnd - composingStart &gt; text.length &amp;&amp; removeAutocomplete(editable)</ID>
    <ID>ComplexMethod:DownloadUtils.kt$DownloadUtils$ @JvmStatic fun guessFileName(contentDisposition: String?, url: String?, mimeType: String?): String</ID>
    <ID>ComplexMethod:ErrorPages.kt$ErrorPages$ fun mapWebViewErrorCodeToErrorType(errorCode: Int): ErrorType</ID>
    <ID>ComplexMethod:InlineAutocompleteEditText.kt$InlineAutocompleteEditText$ fun onAutocomplete(result: AutocompleteResult?)</ID>
    <ID>ComplexMethod:InlineAutocompleteEditText.kt$InlineAutocompleteEditText$ override fun onCreateInputConnection(outAttrs: EditorInfo): InputConnection?</ID>
    <ID>EmptyCatchBlock:DownloadUtils.kt$DownloadUtils${ }</ID>
    <ID>LargeClass:InlineAutocompleteEditText.kt$InlineAutocompleteEditText : AppCompatEditText</ID>
    <ID>MagicNumber:Bitmap.kt$100</ID>
    <ID>MagicNumber:ColorUtils.kt$ColorUtils$0.114</ID>
    <ID>MagicNumber:ColorUtils.kt$ColorUtils$0.299</ID>
    <ID>MagicNumber:ColorUtils.kt$ColorUtils$0.587</ID>
    <ID>MagicNumber:ColorUtils.kt$ColorUtils$186</ID>
    <ID>MagicNumber:DownloadUtils.kt$DownloadUtils$16</ID>
    <ID>MagicNumber:DownloadUtils.kt$DownloadUtils$3</ID>
    <ID>MagicNumber:DownloadUtils.kt$DownloadUtils$4</ID>
    <ID>MaxLineLength:SafeIntent.kt$mozilla.components.support.utils.SafeIntent.kt</ID>
    <ID>MaxLineLength:WebURLFinder.kt$mozilla.components.support.utils.WebURLFinder.kt</ID>
    <ID>NestedBlockDepth:DownloadUtils.kt$DownloadUtils$ @JvmStatic fun guessFileName(contentDisposition: String?, url: String?, mimeType: String?): String</ID>
    <ID>ReturnCount:DownloadUtils.kt$DownloadUtils$private fun parseContentDisposition(contentDisposition: String): String?</ID>
    <ID>ReturnCount:InlineAutocompleteEditText.kt$InlineAutocompleteEditText$ fun onAutocomplete(result: AutocompleteResult?)</ID>
    <ID>ReturnCount:InlineAutocompleteEditText.kt$InlineAutocompleteEditText$fun (_: View, keyCode: Int, event: KeyEvent): Boolean</ID>
    <ID>ReturnCount:SafeBundle.kt$SafeBundle$fun &lt;T : Parcelable&gt; getParcelable(name: String): T?</ID>
    <ID>ReturnCount:SafeBundle.kt$SafeBundle$fun getString(name: String): String?</ID>
    <ID>ReturnCount:SafeIntent.kt$SafeIntent$fun &lt;T : Parcelable&gt; getParcelableArrayListExtra(name: String): ArrayList&lt;T&gt;?</ID>
    <ID>ReturnCount:SafeIntent.kt$SafeIntent$fun &lt;T : Parcelable&gt; getParcelableExtra(name: String): T?</ID>
    <ID>ReturnCount:SafeIntent.kt$SafeIntent$fun getBooleanExtra(name: String, defaultValue: Boolean): Boolean</ID>
    <ID>ReturnCount:SafeIntent.kt$SafeIntent$fun getBundleExtra(name: String): SafeBundle?</ID>
    <ID>ReturnCount:SafeIntent.kt$SafeIntent$fun getCharSequenceExtra(name: String): CharSequence?</ID>
    <ID>ReturnCount:SafeIntent.kt$SafeIntent$fun getIntExtra(name: String, defaultValue: Int): Int</ID>
    <ID>ReturnCount:SafeIntent.kt$SafeIntent$fun getStringArrayListExtra(name: String): ArrayList&lt;String&gt;?</ID>
    <ID>ReturnCount:SafeIntent.kt$SafeIntent$fun getStringExtra(name: String): String?</ID>
    <ID>ReturnCount:SafeIntent.kt$SafeIntent$fun hasExtra(name: String): Boolean</ID>
    <ID>TooGenericExceptionCaught:InlineAutocompleteEditText.kt$InlineAutocompleteEditText$ignored: NullPointerException</ID>
    <ID>TooGenericExceptionCaught:SafeBundle.kt$SafeBundle$e: RuntimeException</ID>
    <ID>TooGenericExceptionCaught:SafeIntent.kt$SafeIntent$e: RuntimeException</ID>
    <ID>TooGenericExceptionCaught:WebURLFinder.kt$WebURLFinder.Companion$e: Exception</ID>
    <ID>TooManyFunctions:InlineAutocompleteEditText.kt$InlineAutocompleteEditText : AppCompatEditText</ID>
    <ID>TopLevelPropertyNaming:Char.kt$/** * A series of dots (typically three, such as "…") that usually indicates an intentional omission of * a word, sentence, or whole section from a text without altering its original meaning. */ val Char.Companion.ELLIPSIS: Char get() = '…'</ID>
  </Whitelist>
</SmellBaseline>