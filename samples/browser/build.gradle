/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion config.compileSdkVersion

    defaultConfig {
        applicationId "org.mozilla.samples.browser"
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "clearPackageData", "true"
        testInstrumentationRunnerArgument "listener", "com.squareup.leakcanary.FailTestOnLeakRunListener"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "engine"

    productFlavors {
        // GeckoView release channels
        geckoNightly {
            dimension "engine"
        }
        geckoBeta {
            dimension "engine"
        }
        geckoRelease {
            dimension "engine"
        }

        // WebView
        system {
            dimension "engine"
        }
    }

    variantFilter { variant ->
        if (variant.buildType.name == "release") {
            // This is a sample app that we are not releasing. Save some time and do not build
            // release versions.
            setIgnore(true)
        }
    }
}

dependencies {
    implementation project(':concept-awesomebar')
    implementation project(':concept-fetch')
    implementation project(':concept-engine')
    implementation project(':concept-tabstray')
    implementation project(':concept-toolbar')
    implementation project(':concept-storage')

    implementation project(':browser-awesomebar')
    implementation project(':browser-engine-system')
    implementation project(':browser-domains')
    implementation project(':browser-icons')
    implementation project(':browser-search')
    implementation project(':browser-session')
    implementation project(':browser-state')
    implementation project(':browser-tabstray')
    implementation project(':browser-thumbnails')
    implementation project(':browser-toolbar')
    implementation project(':browser-menu')
    implementation project(':browser-storage-sync')

    implementation project(':lib-fetch-httpurlconnection')
    implementation project(':lib-nearby')

    implementation project(':feature-awesomebar')
    implementation project(':feature-app-links')
    implementation project(':feature-contextmenu')
    implementation project(':feature-customtabs')
    implementation project(':feature-intent')
    implementation project(':feature-media')
    implementation project(':feature-readerview')
    implementation project(':feature-search')
    implementation project(':feature-session')
    implementation project(':feature-toolbar')
    implementation project(':feature-tabs')
    implementation project(':feature-p2p')
    implementation project(':feature-prompts')
    implementation project(':feature-privatemode')
    implementation project(':feature-pwa')
    implementation project(':feature-findinpage')
    implementation project(':feature-sitepermissions')
    implementation project(':feature-webcompat')
    implementation project(':feature-webcompat-reporter')
    implementation project(':feature-webnotifications')
    implementation project(':feature-addons')

    implementation project(':ui-autocomplete')

    // Add a dependency on service-glean to simplify the testing workflow
    // for engineers that want to test Gecko metrics exfiltrated via the Glean
    // SDK. See bug 1592935 for more context.
    implementation project(':service-glean')

    implementation project(':service-digitalassetlinks')

    implementation project(':support-utils')
    implementation project(':feature-downloads')
    implementation project(':support-images')
    implementation project(':support-ktx')
    implementation project(':support-webextensions')
    implementation project(':support-rustlog')

    geckoNightlyImplementation project(':browser-engine-gecko-nightly')
    geckoBetaImplementation project(':browser-engine-gecko-beta')
    geckoReleaseImplementation project(':browser-engine-gecko')

    implementation Dependencies.google_material

    implementation Dependencies.kotlin_stdlib

    implementation Dependencies.androidx_appcompat
    implementation Dependencies.androidx_core_ktx
    implementation Dependencies.androidx_constraintlayout
    implementation Dependencies.androidx_swiperefreshlayout
    implementation Dependencies.androidx_localbroadcastmanager

    androidTestImplementation project(':support-android-test')
    androidTestImplementation Dependencies.androidx_test_core
    androidTestImplementation Dependencies.androidx_test_runner
    androidTestImplementation Dependencies.androidx_test_rules
    androidTestImplementation Dependencies.androidx_test_junit
    androidTestImplementation Dependencies.androidx_test_uiautomator
    androidTestImplementation Dependencies.androidx_espresso_core
    androidTestImplementation Dependencies.testing_mockwebserver
}

if (gradle.hasProperty('localProperties.dependencySubstitutions.geckoviewTopsrcdir')) {
    if (gradle.hasProperty('localProperties.dependencySubstitutions.geckoviewTopobjdir')) {
        ext.topobjdir = gradle."localProperties.dependencySubstitutions.geckoviewTopobjdir"
    }
    ext.topsrcdir = gradle."localProperties.dependencySubstitutions.geckoviewTopsrcdir"
    apply from: "${topsrcdir}/substitute-local-geckoview.gradle"
}
