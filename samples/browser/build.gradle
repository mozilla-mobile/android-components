/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.build['compileSdkVersion']

    defaultConfig {
        applicationId "org.mozilla.samples.browser"
        minSdkVersion rootProject.ext.build['minSdkVersion']
        targetSdkVersion rootProject.ext.build['targetSdkVersion']
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "channel", "abi"

    productFlavors {
        // GeckoView release channels
        nightly {
            dimension "channel"
        }
        beta {
            dimension "channel"
        }
        production {
            dimension "channel"
        }

        // Processor architecture
        arm {
            dimension "abi"
        }
        x86 {
            dimension "abi"
        }
        aarch64 {
            dimension "abi"
        }
    }

    variantFilter { variant ->
        if (variant.buildType.name == "release") {
            // This is a sample app that we are not releasing. Save some time and do not build
            // release versions.
            setIgnore(true)
        }
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

configurations {
    nightlyArmImplementation {}
    nightlyX86Implementation {}
    nightlyAarch64Implementation {}

    betaArmImplementation {}
    betaX86Implementation {}
    betaAarch64Implementation {}

    productionArmImplementation {}
    productionX86Implementation {}
    productionAarch64Implementation {}
}

dependencies {
    implementation project(':concept-engine')
    implementation project(':concept-toolbar')

    implementation project(':browser-engine-system')

    implementation project(':browser-search')
    implementation project(':browser-session')
    implementation project(':browser-toolbar')
    implementation project(':browser-menu')

    implementation project(':feature-search')
    implementation project(':feature-session')
    implementation project(':feature-toolbar')

    implementation project(':ui-autocomplete')

    nightlyImplementation project(':browser-engine-gecko-nightly')
    nightlyArmImplementation "org.mozilla:geckoview-nightly-armeabi-v7a:${rootProject.ext.geckoNightly['version']}"
    nightlyX86Implementation "org.mozilla:geckoview-nightly-x86:${rootProject.ext.geckoNightly['version']}"
    nightlyAarch64Implementation "org.mozilla:geckoview-nightly-arm64-v8a:${rootProject.ext.geckoNightly['version']}"

    betaImplementation project(':browser-engine-gecko-beta')
    betaArmImplementation "org.mozilla:geckoview-beta-armeabi-v7a:${rootProject.ext.geckoBeta['version']}"
    betaX86Implementation "org.mozilla:geckoview-beta-x86:${rootProject.ext.geckoBeta['version']}"
    betaAarch64Implementation "org.mozilla:geckoview-beta-arm64-v8a:${rootProject.ext.geckoBeta['version']}"

    productionImplementation project(':browser-engine-gecko')
    productionArmImplementation "org.mozilla:geckoview-release-armeabi-v7a:${rootProject.ext.geckoRelease['version']}"
    productionX86Implementation "org.mozilla:geckoview-release-x86:${rootProject.ext.geckoRelease['version']}"
    productionAarch64Implementation "org.mozilla:geckoview-release-arm64-v8a:${rootProject.ext.geckoRelease['version']}"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:${rootProject.ext.dependencies['kotlin']}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${rootProject.ext.dependencies['coroutines']}"

    implementation "com.android.support:appcompat-v7:${rootProject.ext.dependencies['supportLibraries']}"
}
